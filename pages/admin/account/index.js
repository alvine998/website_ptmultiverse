import Head from 'next/head'
import React, { useEffect } from 'react'
import Layout from '../../../components/Layout'
import { useState } from 'react'
import ModalAccount from '../../../components/Modals/ModalAccount'
import axios from 'axios'
import { Config } from '../../../config'
import Swal from 'sweetalert2'

export default function Account() {
    const [toggle, setToggle] = useState(false)
    const [keys, setKeys] = useState()
    const [toggleData, setToggleData] = useState()
    const [data, setData] = useState([])

    const [payload, setPayload] = useState()

    const getData = async () => {
        try {
            const result = await axios.get(`${Config.base_url_api.base}/users/`)
            setData(result.data.result)
        } catch (error) {
            console.log(error)
        }
    }

    const save = async () => {
        try {
            const payloadData = {
                ...payload
            }
            const result = await axios.post(`${Config.base_url_api.base}/users/`, payloadData)
            getData()
            setToggle(!toggle)
            Swal.fire({
                text: 'Success Create Data',
                icon: 'success'
            })
        } catch (error) {
            console.log(error);
            Swal.fire({
                text: 'Internal server error',
                icon: 'error'
            })
        }
    }

    const remove = async () => {
        try {
            const result = await axios.delete(`${Config.base_url_api.base}/users/${toggleData?.ID}`)
            getData()
            setToggle(!toggle)
            Swal.fire({
                text: 'Success Delete Data',
                icon: 'success'
            })
        } catch (error) {
            console.log(error);
            Swal.fire({
                text: 'Internal server error',
                icon: 'error'
            })
        }
    }

    const update = async () => {
        try {
            const payloadData = {
                ...payload
            }
            const result = await axios.patch(`${Config.base_url_api.base}/users/?id=${toggleData?.ID}`, payloadData)
            getData()
            setToggle(!toggle)
            Swal.fire({
                text: 'Success Update Data',
                icon: 'success'
            })
        } catch (error) {
            console.log(error);
            Swal.fire({
                text: 'Internal server error',
                icon: 'error'
            })
        }
    }

    useEffect(() => {
        getData()
    }, [])
    return (
        <div>
            <Head>
                <title>Dashboard</title>
                <meta name="description" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
                <link rel="preconnect" href="https://fonts.googleapis.com" />
                <link rel="preconnect" href="https://fonts.gstatic.com" crossOrigin={''} />
                <link href="https://fonts.googleapis.com/css2?family=Abril+Fatface&display=swap" rel="stylesheet"></link>
            </Head>
            <Layout>
                <div>
                    <div>
                        <h3>Akun Pengguna</h3>
                    </div>
                    <div className='pt-5 pb-2'>
                        <button onClick={() => {
                            setToggle(!toggle)
                            setKeys('create')
                            setToggleData(null)
                        }} className='btn btn-primary'>
                            Tambah Akun
                        </button>
                    </div>

                    <table className='table table-stripper'>
                        <thead>
                            <tr>
                                <th>No</th>
                                <th>Nama</th>
                                <th>Email</th>
                                <th>No Telepon</th>
                                <th>Aksi</th>
                            </tr>
                        </thead>
                        <tbody>
                            {
                                data?.map((val, idx) => (
                                    <tr key={idx}>
                                        <td>{idx + 1}</td>
                                        <td>{val?.Name}</td>
                                        <td>{val?.Email}</td>
                                        <td>{val?.Phone}</td>
                                        <td>
                                            <a href='#edit' onClick={() => {
                                                setToggle(!toggle)
                                                setKeys('update')
                                                setToggleData(val)
                                            }} className='text-success'>Edit</a>
                                            <a onClick={() => {
                                                setToggle(!toggle)
                                                setKeys('delete')
                                                setToggleData(val)
                                            }} href='#delete' className='text-danger ms-4'>Hapus</a>
                                        </td>
                                    </tr>
                                ))
                            }
                        </tbody>
                    </table>
                    <ModalAccount toggle={toggle} setToggle={setToggle} keys={keys} detail={toggleData} actions={keys == 'create' ? save : keys == 'delete' ? remove : update} payload={payload} setPayload={setPayload} />
                </div>
            </Layout>
        </div>
    )
}
